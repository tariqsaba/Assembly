;Chapter 5.9 Programming Exercise 7 (Random Screen Locations)

;Write a program that displays a single character at 100 random screen locations, using a timing
;delay of 100 milliseconds. Hint: Use the GetMaxXY procedure to determine the current size of
;the console window.

.386
.model flat,stdcall
.stack 4096
ExitProcess proto,dwExitCode:dword
GetMaxXY proto
Randomize proto
RandomRange proto
Gotoxy proto
WriteChar proto
Delay proto
WaitMsg proto

.data
	rows BYTE ?
	cols BYTE ?
	posX DWORD ?
	posY DWORD ?
.code
main proc
	mov eax,1000
	call Delay
	call GetMaxXY		;get current size of console window and store rows/cols in memory
	mov rows,al
	mov cols,dl	
	call Randomize		;seeds RandomRange with time of day	
	mov ecx,100			;loop should loop 100 times	
L1:		
	movzx eax,cols		;RandomRange takes eax as parameter for n (generating 0 to n-1)
	call RandomRange;	;RandomRange returns to eax
	inc eax
	mov posX,eax
		
	movzx eax,rows		;RandomRange takes eax as parameter for n (generating 0 to n-1)
	call RandomRange;	;RandomRange returns to eax
	inc eax
	mov posY,eax

	mov dh,BYTE PTR posY
	mov dl,BYTE PTR posX
	call Gotoxy			;move cursor to position

	mov al,"O"
	call WriteChar
	mov eax,100			;dealy is 1/10 second or 100 milliseconds
	call Delay
	loop L1

	mov dh,0			;move cursor back to 0,0 before printing wait message
	mov dl,0
	call Gotoxy
	call WaitMsg

	invoke ExitProcess,0
main endp
end main



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;



;Chapter 5.9 Programming Exercise 10 (Fibonacci)

.386
.model flat,stdcall
.stack 4096
ExitProcess proto,dwExitCode:dword
WriteDec proto
WaitMsg proto
Crlf proto

.data
	array DWORD 47 DUP(0)

.code
main proc
	mov esi,OFFSET array
	mov ecx,47
	call Fibo

	mov esi, OFFSET array		;print fibonacci array
	mov ecx, LENGTHOF array
	call printArray

	call WaitMsg

	invoke ExitProcess,0
main endp

Fibo PROC USES esi ecx edx
	;Fibo can generate for array of length 2 or greater
	mov edx,1			;1st value must be 1
	mov [esi],edx
	add esi,TYPE DWORD	;esi now points to 2nd element

	mov edx,1			;2nd value must also be 1
	mov [esi],edx
	add esi,TYPE DWORD  ;esi now points to 3rd element

	sub ecx,2           ;loop counter subtracted by two since first 2 numbers are not generated by iteration
	L1:
		mov edx,[esi-2*TYPE DWORD]
		add [esi],edx				;add to current array element by last last element
		mov edx,[esi-1*TYPE DWORD]
		add [esi],edx				;then add to current array element by last element
		add esi,TYPE DWORD
	loop L1
	ret
Fibo ENDP

printArray PROC USES esi ecx eax
printLoop:
	mov eax, [esi]
	call WriteDec
	call Crlf
	add esi,TYPE DWORD
	loop printLoop
	ret
printArray  ENDP

end main
